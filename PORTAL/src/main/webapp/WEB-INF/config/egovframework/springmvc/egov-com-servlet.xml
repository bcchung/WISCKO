<?xml version="1.0" encoding="UTF-8"?>
<!--
    - DispatcherServlet application context for Application's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--
        - The controllers are autodetected POJOs labeled with the @Controller annotation.
    -->
    <!-- 패키지 내 Controller, Service, Repository 클래스의 auto detect를 위한 mvc 설정 -->
    <context:component-scan base-package="egovframework, com">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
    
    <!--
        - The form-based controllers within this application provide @RequestMapping 
        - annotations at the type level for path mapping URLs and @RequestMapping 
        - at the method level for request type mappings (e.g., GET and POST). 
        - In contrast, ClinicController - which is not form-based - provides 
        - @RequestMapping only at the method level for path mapping URLs.
        -
        - DefaultAnnotationHandlerMapping is driven by these annotations and is 
        - enabled by default with Java 5+.
    -->

    <!--
        - This bean processes annotated handler methods, applying Application-specific PropertyEditors
        - for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.
     -->
     <!-- ReqeustMapping 과 Controller 클래스 매핑을 위한 mvc 설정 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    	<property name="synchronizeOnSession" value="true" />
        <property name="webBindingInitializer">
            <bean class="egovframework.com.cmm.web.EgovBindingInitializer"/>
        </property>
        <property name="customArgumentResolvers">
            <list>
                <bean class="egovframework.rte.ptl.mvc.bind.CommandMapArgumentResolver"/>
                <bean class="egovframework.com.cmm.CommandArrayArgumentResolver"/>
            </list>
        </property>
    </bean>
    <!-- ReqeustMapping 과 Controller 클래스 매핑을 위한 annotation mvc 설정 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    
    <!--
        - This bean resolves specific types of exceptions to corresponding logical 
        - view names for error views. The default behaviour of DispatcherServlet 
        - is to propagate all exceptions to the servlet container: this will happen 
        - here with all other types of exceptions.
    -->
    <!-- 서블릿컨네이너상의 exception에 대한 오류 페이지를 연결하는 mvc 설정 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="cmm/error/egovError"/>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">cmm/error/dataAccessFailure</prop>
                <prop key="org.springframework.transaction.TransactionException">cmm/error/transactionFailure</prop>
                <prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">cmm/error/egovError</prop>
                <prop key="org.springframework.security.AccessDeniedException">cmm/error/accessDenied</prop>
            </props>
        </property>
    </bean>
    
    <!--
        - This bean configures the 'prefix' and 'suffix' properties of 
        - InternalResourceViewResolver, which resolves logical view names 
        - returned by Controllers. For example, a logical view name of "vets" 
        - will be mapped to "/WEB-INF/jsp/vets.jsp".
    -->
    
	<!-- view resolver -->
	<!-- <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	    <property name="mediaTypes">
	        <map>
	            <entry key="html" value="text/html" />
	            <entry key="json" value="application/json" />
	        </map>
	    </property>
	    <property name="viewResolvers">
	        <list>
	            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
	            <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	            	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	                <property name="prefix" value="/WEB-INF/jsp/" />
	                <property name="suffix" value=".jsp" />
	            </bean>
	        </list>
	    </property>
	    <property name="defaultViews">
	        <list>
	            <bean
	                class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
	                <property name="prefixJson" value="true" />
	            </bean>
	        </list>
	    </property>
	</bean> -->
    
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>
    
    <!-- 화면처리용 JSP 파일명의  prefix, suffix 처리에 대한 mvc 설정  -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" 
	    p:viewClass="org.springframework.web.servlet.view.JstlView" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>

    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
        - Could also reside in the root application context, as it is generic,
        - but is currently just used within Application's web tier.
    
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
            p:basename="messages"/>
    -->

    <!-- 로그인 체크가 필요한 URL과 로그인 여부를 체크해줄 인터셉터를 등록한다. -->
    <!--
    <bean id="selectAnnotaionMapper" class="egovframework.rte.ptl.mvc.handler.SimpleUrlAnnotationHandlerMapping" p:order="1">
        <property name="interceptors">
            <list>
                <ref local="authenticInterceptor" />
            </list>
        </property>
        -->
        <!-- 로그인 체크가 필요한 URL 리스트  -->
        <!--
        <property name="urls">
            <set>
                <value>/**/*.do</value>
            </set>
        </property>
    </bean>
    -->

    <!-- 로그인 체크 인터셉터 -->
    <!-- <bean id="authenticInterceptor" class="egovframework.com.cmm.interceptor.AuthenticInterceptor"> -->
    <!-- 인증 체크가 필요 없는 URL 리스트  -->
    <!--
        <property name="permittedURL">
            <set>
                <value>/uat/uia/[a-zA-Z]+\.do</value>
                <value>/EgovLeft.do</value>
                <value>/uat/uia/actionLogin.do</value>
            </set>
        </property>
    </bean>
    -->
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	    <property name="paramName" value="locale"/>
	</bean>
	   
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="KO" />
	</bean>   
	   
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">   
	    <property name="interceptors">
	        <ref bean="localeChangeInterceptor" />   
	    </property>   
	</bean>
	
</beans>